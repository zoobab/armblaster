
#include <stdio.h>
#include "LPC23xx.h"

//#define	__INLINE	/**/

typedef	unsigned	int		uint32_t;
typedef	unsigned	short	uint16_t;
typedef	unsigned	char	uint8_t;

//typedef	int					IRQn_Type;

int main()
{
	printf("%32s = %x\n","VICIRQStatus",	&VICIRQStatus);
	printf("%32s = %x\n","VICFIQStatus",	&VICFIQStatus);
	printf("%32s = %x\n","VICRawIntr",	&VICRawIntr);
	printf("%32s = %x\n","VICIntSelect",	&VICIntSelect);
	printf("%32s = %x\n","VICIntEnable",	&VICIntEnable);
	printf("%32s = %x\n","VICIntEnClr",	&VICIntEnClr);
	printf("%32s = %x\n","VICSoftInt",	&VICSoftInt);
	printf("%32s = %x\n","VICSoftIntClr",	&VICSoftIntClr);
	printf("%32s = %x\n","VICProtection",	&VICProtection);
	printf("%32s = %x\n","VICSWPrioMask",	&VICSWPrioMask);
	printf("%32s = %x\n","VICVectAddr0",	&VICVectAddr0);
	printf("%32s = %x\n","VICVectAddr1",	&VICVectAddr1);
	printf("%32s = %x\n","VICVectAddr2",	&VICVectAddr2);
	printf("%32s = %x\n","VICVectAddr3",	&VICVectAddr3);
	printf("%32s = %x\n","VICVectAddr4",	&VICVectAddr4);
	printf("%32s = %x\n","VICVectAddr5",	&VICVectAddr5);
	printf("%32s = %x\n","VICVectAddr6",	&VICVectAddr6);
	printf("%32s = %x\n","VICVectAddr7",	&VICVectAddr7);
	printf("%32s = %x\n","VICVectAddr8",	&VICVectAddr8);
	printf("%32s = %x\n","VICVectAddr9",	&VICVectAddr9);
	printf("%32s = %x\n","VICVectAddr10",	&VICVectAddr10);
	printf("%32s = %x\n","VICVectAddr11",	&VICVectAddr11);
	printf("%32s = %x\n","VICVectAddr12",	&VICVectAddr12);
	printf("%32s = %x\n","VICVectAddr13",	&VICVectAddr13);
	printf("%32s = %x\n","VICVectAddr14",	&VICVectAddr14);
	printf("%32s = %x\n","VICVectAddr15",	&VICVectAddr15);
	printf("%32s = %x\n","VICVectAddr16",	&VICVectAddr16);
	printf("%32s = %x\n","VICVectAddr17",	&VICVectAddr17);
	printf("%32s = %x\n","VICVectAddr18",	&VICVectAddr18);
	printf("%32s = %x\n","VICVectAddr19",	&VICVectAddr19);
	printf("%32s = %x\n","VICVectAddr20",	&VICVectAddr20);
	printf("%32s = %x\n","VICVectAddr21",	&VICVectAddr21);
	printf("%32s = %x\n","VICVectAddr22",	&VICVectAddr22);
	printf("%32s = %x\n","VICVectAddr23",	&VICVectAddr23);
	printf("%32s = %x\n","VICVectAddr24",	&VICVectAddr24);
	printf("%32s = %x\n","VICVectAddr25",	&VICVectAddr25);
	printf("%32s = %x\n","VICVectAddr26",	&VICVectAddr26);
	printf("%32s = %x\n","VICVectAddr27",	&VICVectAddr27);
	printf("%32s = %x\n","VICVectAddr28",	&VICVectAddr28);
	printf("%32s = %x\n","VICVectAddr29",	&VICVectAddr29);
	printf("%32s = %x\n","VICVectAddr30",	&VICVectAddr30);
	printf("%32s = %x\n","VICVectAddr31",	&VICVectAddr31);
	printf("%32s = %x\n","VICVectCntl0",	&VICVectCntl0);
	printf("%32s = %x\n","VICVectCntl1",	&VICVectCntl1);
	printf("%32s = %x\n","VICVectCntl2",	&VICVectCntl2);
	printf("%32s = %x\n","VICVectCntl3",	&VICVectCntl3);
	printf("%32s = %x\n","VICVectCntl4",	&VICVectCntl4);
	printf("%32s = %x\n","VICVectCntl5",	&VICVectCntl5);
	printf("%32s = %x\n","VICVectCntl6",	&VICVectCntl6);
	printf("%32s = %x\n","VICVectCntl7",	&VICVectCntl7);
	printf("%32s = %x\n","VICVectCntl8",	&VICVectCntl8);
	printf("%32s = %x\n","VICVectCntl9",	&VICVectCntl9);
	printf("%32s = %x\n","VICVectCntl10",	&VICVectCntl10);
	printf("%32s = %x\n","VICVectCntl11",	&VICVectCntl11);
	printf("%32s = %x\n","VICVectCntl12",	&VICVectCntl12);
	printf("%32s = %x\n","VICVectCntl13",	&VICVectCntl13);
	printf("%32s = %x\n","VICVectCntl14",	&VICVectCntl14);
	printf("%32s = %x\n","VICVectCntl15",	&VICVectCntl15);
	printf("%32s = %x\n","VICVectCntl16",	&VICVectCntl16);
	printf("%32s = %x\n","VICVectCntl17",	&VICVectCntl17);
	printf("%32s = %x\n","VICVectCntl18",	&VICVectCntl18);
	printf("%32s = %x\n","VICVectCntl19",	&VICVectCntl19);
	printf("%32s = %x\n","VICVectCntl20",	&VICVectCntl20);
	printf("%32s = %x\n","VICVectCntl21",	&VICVectCntl21);
	printf("%32s = %x\n","VICVectCntl22",	&VICVectCntl22);
	printf("%32s = %x\n","VICVectCntl23",	&VICVectCntl23);
	printf("%32s = %x\n","VICVectCntl24",	&VICVectCntl24);
	printf("%32s = %x\n","VICVectCntl25",	&VICVectCntl25);
	printf("%32s = %x\n","VICVectCntl26",	&VICVectCntl26);
	printf("%32s = %x\n","VICVectCntl27",	&VICVectCntl27);
	printf("%32s = %x\n","VICVectCntl28",	&VICVectCntl28);
	printf("%32s = %x\n","VICVectCntl29",	&VICVectCntl29);
	printf("%32s = %x\n","VICVectCntl30",	&VICVectCntl30);
	printf("%32s = %x\n","VICVectCntl31",	&VICVectCntl31);
	printf("%32s = %x\n","VICVectPriority0",	&VICVectPriority0);
	printf("%32s = %x\n","VICVectPriority1",	&VICVectPriority1);
	printf("%32s = %x\n","VICVectPriority2",	&VICVectPriority2);
	printf("%32s = %x\n","VICVectPriority3",	&VICVectPriority3);
	printf("%32s = %x\n","VICVectPriority4",	&VICVectPriority4);
	printf("%32s = %x\n","VICVectPriority5",	&VICVectPriority5);
	printf("%32s = %x\n","VICVectPriority6",	&VICVectPriority6);
	printf("%32s = %x\n","VICVectPriority7",	&VICVectPriority7);
	printf("%32s = %x\n","VICVectPriority8",	&VICVectPriority8);
	printf("%32s = %x\n","VICVectPriority9",	&VICVectPriority9);
	printf("%32s = %x\n","VICVectPriority10",	&VICVectPriority10);
	printf("%32s = %x\n","VICVectPriority11",	&VICVectPriority11);
	printf("%32s = %x\n","VICVectPriority12",	&VICVectPriority12);
	printf("%32s = %x\n","VICVectPriority13",	&VICVectPriority13);
	printf("%32s = %x\n","VICVectPriority14",	&VICVectPriority14);
	printf("%32s = %x\n","VICVectPriority15",	&VICVectPriority15);
	printf("%32s = %x\n","VICVectPriority16",	&VICVectPriority16);
	printf("%32s = %x\n","VICVectPriority17",	&VICVectPriority17);
	printf("%32s = %x\n","VICVectPriority18",	&VICVectPriority18);
	printf("%32s = %x\n","VICVectPriority19",	&VICVectPriority19);
	printf("%32s = %x\n","VICVectPriority20",	&VICVectPriority20);
	printf("%32s = %x\n","VICVectPriority21",	&VICVectPriority21);
	printf("%32s = %x\n","VICVectPriority22",	&VICVectPriority22);
	printf("%32s = %x\n","VICVectPriority23",	&VICVectPriority23);
	printf("%32s = %x\n","VICVectPriority24",	&VICVectPriority24);
	printf("%32s = %x\n","VICVectPriority25",	&VICVectPriority25);
	printf("%32s = %x\n","VICVectPriority26",	&VICVectPriority26);
	printf("%32s = %x\n","VICVectPriority27",	&VICVectPriority27);
	printf("%32s = %x\n","VICVectPriority28",	&VICVectPriority28);
	printf("%32s = %x\n","VICVectPriority29",	&VICVectPriority29);
	printf("%32s = %x\n","VICVectPriority30",	&VICVectPriority30);
	printf("%32s = %x\n","VICVectPriority31",	&VICVectPriority31);
	printf("%32s = %x\n","VICVectAddr",	&VICVectAddr);
	printf("%32s = %x\n","PINSEL0",	&PINSEL0);
	printf("%32s = %x\n","PINSEL1",	&PINSEL1);
	printf("%32s = %x\n","PINSEL2",	&PINSEL2);
	printf("%32s = %x\n","PINSEL3",	&PINSEL3);
	printf("%32s = %x\n","PINSEL4",	&PINSEL4);
	printf("%32s = %x\n","PINSEL5",	&PINSEL5);
	printf("%32s = %x\n","PINSEL6",	&PINSEL6);
	printf("%32s = %x\n","PINSEL7",	&PINSEL7);
	printf("%32s = %x\n","PINSEL8",	&PINSEL8);
	printf("%32s = %x\n","PINSEL9",	&PINSEL9);
	printf("%32s = %x\n","PINSEL10",	&PINSEL10);
	printf("%32s = %x\n","PINMODE0",	&PINMODE0);
	printf("%32s = %x\n","PINMODE1",	&PINMODE1);
	printf("%32s = %x\n","PINMODE2",	&PINMODE2);
	printf("%32s = %x\n","PINMODE3",	&PINMODE3);
	printf("%32s = %x\n","PINMODE4",	&PINMODE4);
	printf("%32s = %x\n","PINMODE5",	&PINMODE5);
	printf("%32s = %x\n","PINMODE6",	&PINMODE6);
	printf("%32s = %x\n","PINMODE7",	&PINMODE7);
	printf("%32s = %x\n","PINMODE8",	&PINMODE8);
	printf("%32s = %x\n","PINMODE9",	&PINMODE9);
	printf("%32s = %x\n","IOPIN0",	&IOPIN0);
	printf("%32s = %x\n","IOSET0",	&IOSET0);
	printf("%32s = %x\n","IODIR0",	&IODIR0);
	printf("%32s = %x\n","IOCLR0",	&IOCLR0);
	printf("%32s = %x\n","IOPIN1",	&IOPIN1);
	printf("%32s = %x\n","IOSET1",	&IOSET1);
	printf("%32s = %x\n","IODIR1",	&IODIR1);
	printf("%32s = %x\n","IOCLR1",	&IOCLR1);
	printf("%32s = %x\n","IO0_INT_EN_R",	&IO0_INT_EN_R);
	printf("%32s = %x\n","IO0_INT_EN_F",	&IO0_INT_EN_F);
	printf("%32s = %x\n","IO0_INT_STAT_R",	&IO0_INT_STAT_R);
	printf("%32s = %x\n","IO0_INT_STAT_F",	&IO0_INT_STAT_F);
	printf("%32s = %x\n","IO0_INT_CLR",	&IO0_INT_CLR);
	printf("%32s = %x\n","IO2_INT_EN_R",	&IO2_INT_EN_R);
	printf("%32s = %x\n","IO2_INT_EN_F",	&IO2_INT_EN_F);
	printf("%32s = %x\n","IO2_INT_STAT_R",	&IO2_INT_STAT_R);
	printf("%32s = %x\n","IO2_INT_STAT_F",	&IO2_INT_STAT_F);
	printf("%32s = %x\n","IO2_INT_CLR",	&IO2_INT_CLR);
	printf("%32s = %x\n","IO_INT_STAT",	&IO_INT_STAT);
	printf("%32s = %x\n","PARTCFG",	&PARTCFG);
	printf("%32s = %x\n","FIO0DIR",	&FIO0DIR);
	printf("%32s = %x\n","FIO0MASK",	&FIO0MASK);
	printf("%32s = %x\n","FIO0PIN",	&FIO0PIN);
	printf("%32s = %x\n","FIO0SET",	&FIO0SET);
	printf("%32s = %x\n","FIO0CLR",	&FIO0CLR);
	printf("%32s = %x\n","FIO1DIR",	&FIO1DIR);
	printf("%32s = %x\n","FIO1MASK",	&FIO1MASK);
	printf("%32s = %x\n","FIO1PIN",	&FIO1PIN);
	printf("%32s = %x\n","FIO1SET",	&FIO1SET);
	printf("%32s = %x\n","FIO1CLR",	&FIO1CLR);
	printf("%32s = %x\n","FIO2DIR",	&FIO2DIR);
	printf("%32s = %x\n","FIO2MASK",	&FIO2MASK);
	printf("%32s = %x\n","FIO2PIN",	&FIO2PIN);
	printf("%32s = %x\n","FIO2SET",	&FIO2SET);
	printf("%32s = %x\n","FIO2CLR",	&FIO2CLR);
	printf("%32s = %x\n","FIO3DIR",	&FIO3DIR);
	printf("%32s = %x\n","FIO3MASK",	&FIO3MASK);
	printf("%32s = %x\n","FIO3PIN",	&FIO3PIN);
	printf("%32s = %x\n","FIO3SET",	&FIO3SET);
	printf("%32s = %x\n","FIO3CLR",	&FIO3CLR);
	printf("%32s = %x\n","FIO4DIR",	&FIO4DIR);
	printf("%32s = %x\n","FIO4MASK",	&FIO4MASK);
	printf("%32s = %x\n","FIO4PIN",	&FIO4PIN);
	printf("%32s = %x\n","FIO4SET",	&FIO4SET);
	printf("%32s = %x\n","FIO4CLR",	&FIO4CLR);
	printf("%32s = %x\n","FIO0DIR0",	&FIO0DIR0);
	printf("%32s = %x\n","FIO1DIR0",	&FIO1DIR0);
	printf("%32s = %x\n","FIO2DIR0",	&FIO2DIR0);
	printf("%32s = %x\n","FIO3DIR0",	&FIO3DIR0);
	printf("%32s = %x\n","FIO4DIR0",	&FIO4DIR0);
	printf("%32s = %x\n","FIO0DIR1",	&FIO0DIR1);
	printf("%32s = %x\n","FIO1DIR1",	&FIO1DIR1);
	printf("%32s = %x\n","FIO2DIR1",	&FIO2DIR1);
	printf("%32s = %x\n","FIO3DIR1",	&FIO3DIR1);
	printf("%32s = %x\n","FIO4DIR1",	&FIO4DIR1);
	printf("%32s = %x\n","FIO0DIR2",	&FIO0DIR2);
	printf("%32s = %x\n","FIO1DIR2",	&FIO1DIR2);
	printf("%32s = %x\n","FIO2DIR2",	&FIO2DIR2);
	printf("%32s = %x\n","FIO3DIR2",	&FIO3DIR2);
	printf("%32s = %x\n","FIO4DIR2",	&FIO4DIR2);
	printf("%32s = %x\n","FIO0DIR3",	&FIO0DIR3);
	printf("%32s = %x\n","FIO1DIR3",	&FIO1DIR3);
	printf("%32s = %x\n","FIO2DIR3",	&FIO2DIR3);
	printf("%32s = %x\n","FIO3DIR3",	&FIO3DIR3);
	printf("%32s = %x\n","FIO4DIR3",	&FIO4DIR3);
	printf("%32s = %x\n","FIO0DIRL",	&FIO0DIRL);
	printf("%32s = %x\n","FIO1DIRL",	&FIO1DIRL);
	printf("%32s = %x\n","FIO2DIRL",	&FIO2DIRL);
	printf("%32s = %x\n","FIO3DIRL",	&FIO3DIRL);
	printf("%32s = %x\n","FIO4DIRL",	&FIO4DIRL);
	printf("%32s = %x\n","FIO0DIRU",	&FIO0DIRU);
	printf("%32s = %x\n","FIO1DIRU",	&FIO1DIRU);
	printf("%32s = %x\n","FIO2DIRU",	&FIO2DIRU);
	printf("%32s = %x\n","FIO3DIRU",	&FIO3DIRU);
	printf("%32s = %x\n","FIO4DIRU",	&FIO4DIRU);
	printf("%32s = %x\n","FIO0MASK0",	&FIO0MASK0);
	printf("%32s = %x\n","FIO1MASK0",	&FIO1MASK0);
	printf("%32s = %x\n","FIO2MASK0",	&FIO2MASK0);
	printf("%32s = %x\n","FIO3MASK0",	&FIO3MASK0);
	printf("%32s = %x\n","FIO4MASK0",	&FIO4MASK0);
	printf("%32s = %x\n","FIO0MASK1",	&FIO0MASK1);
	printf("%32s = %x\n","FIO1MASK1",	&FIO1MASK1);
	printf("%32s = %x\n","FIO2MASK1",	&FIO2MASK1);
	printf("%32s = %x\n","FIO3MASK1",	&FIO3MASK1);
	printf("%32s = %x\n","FIO4MASK1",	&FIO4MASK1);
	printf("%32s = %x\n","FIO0MASK2",	&FIO0MASK2);
	printf("%32s = %x\n","FIO1MASK2",	&FIO1MASK2);
	printf("%32s = %x\n","FIO2MASK2",	&FIO2MASK2);
	printf("%32s = %x\n","FIO3MASK2",	&FIO3MASK2);
	printf("%32s = %x\n","FIO4MASK2",	&FIO4MASK2);
	printf("%32s = %x\n","FIO0MASK3",	&FIO0MASK3);
	printf("%32s = %x\n","FIO1MASK3",	&FIO1MASK3);
	printf("%32s = %x\n","FIO2MASK3",	&FIO2MASK3);
	printf("%32s = %x\n","FIO3MASK3",	&FIO3MASK3);
	printf("%32s = %x\n","FIO4MASK3",	&FIO4MASK3);
	printf("%32s = %x\n","FIO0MASKL",	&FIO0MASKL);
	printf("%32s = %x\n","FIO1MASKL",	&FIO1MASKL);
	printf("%32s = %x\n","FIO2MASKL",	&FIO2MASKL);
	printf("%32s = %x\n","FIO3MASKL",	&FIO3MASKL);
	printf("%32s = %x\n","FIO4MASKL",	&FIO4MASKL);
	printf("%32s = %x\n","FIO0MASKU",	&FIO0MASKU);
	printf("%32s = %x\n","FIO1MASKU",	&FIO1MASKU);
	printf("%32s = %x\n","FIO2MASKU",	&FIO2MASKU);
	printf("%32s = %x\n","FIO3MASKU",	&FIO3MASKU);
	printf("%32s = %x\n","FIO4MASKU",	&FIO4MASKU);
	printf("%32s = %x\n","FIO0PIN0",	&FIO0PIN0);
	printf("%32s = %x\n","FIO1PIN0",	&FIO1PIN0);
	printf("%32s = %x\n","FIO2PIN0",	&FIO2PIN0);
	printf("%32s = %x\n","FIO3PIN0",	&FIO3PIN0);
	printf("%32s = %x\n","FIO4PIN0",	&FIO4PIN0);
	printf("%32s = %x\n","FIO0PIN1",	&FIO0PIN1);
	printf("%32s = %x\n","FIO1PIN1",	&FIO1PIN1);
	printf("%32s = %x\n","FIO2PIN1",	&FIO2PIN1);
	printf("%32s = %x\n","FIO3PIN1",	&FIO3PIN1);
	printf("%32s = %x\n","FIO4PIN1",	&FIO4PIN1);
	printf("%32s = %x\n","FIO0PIN2",	&FIO0PIN2);
	printf("%32s = %x\n","FIO1PIN2",	&FIO1PIN2);
	printf("%32s = %x\n","FIO2PIN2",	&FIO2PIN2);
	printf("%32s = %x\n","FIO3PIN2",	&FIO3PIN2);
	printf("%32s = %x\n","FIO4PIN2",	&FIO4PIN2);
	printf("%32s = %x\n","FIO0PIN3",	&FIO0PIN3);
	printf("%32s = %x\n","FIO1PIN3",	&FIO1PIN3);
	printf("%32s = %x\n","FIO2PIN3",	&FIO2PIN3);
	printf("%32s = %x\n","FIO3PIN3",	&FIO3PIN3);
	printf("%32s = %x\n","FIO4PIN3",	&FIO4PIN3);
	printf("%32s = %x\n","FIO0PINL",	&FIO0PINL);
	printf("%32s = %x\n","FIO1PINL",	&FIO1PINL);
	printf("%32s = %x\n","FIO2PINL",	&FIO2PINL);
	printf("%32s = %x\n","FIO3PINL",	&FIO3PINL);
	printf("%32s = %x\n","FIO4PINL",	&FIO4PINL);
	printf("%32s = %x\n","FIO0PINU",	&FIO0PINU);
	printf("%32s = %x\n","FIO1PINU",	&FIO1PINU);
	printf("%32s = %x\n","FIO2PINU",	&FIO2PINU);
	printf("%32s = %x\n","FIO3PINU",	&FIO3PINU);
	printf("%32s = %x\n","FIO4PINU",	&FIO4PINU);
	printf("%32s = %x\n","FIO0SET0",	&FIO0SET0);
	printf("%32s = %x\n","FIO1SET0",	&FIO1SET0);
	printf("%32s = %x\n","FIO2SET0",	&FIO2SET0);
	printf("%32s = %x\n","FIO3SET0",	&FIO3SET0);
	printf("%32s = %x\n","FIO4SET0",	&FIO4SET0);
	printf("%32s = %x\n","FIO0SET1",	&FIO0SET1);
	printf("%32s = %x\n","FIO1SET1",	&FIO1SET1);
	printf("%32s = %x\n","FIO2SET1",	&FIO2SET1);
	printf("%32s = %x\n","FIO3SET1",	&FIO3SET1);
	printf("%32s = %x\n","FIO4SET1",	&FIO4SET1);
	printf("%32s = %x\n","FIO0SET2",	&FIO0SET2);
	printf("%32s = %x\n","FIO1SET2",	&FIO1SET2);
	printf("%32s = %x\n","FIO2SET2",	&FIO2SET2);
	printf("%32s = %x\n","FIO3SET2",	&FIO3SET2);
	printf("%32s = %x\n","FIO4SET2",	&FIO4SET2);
	printf("%32s = %x\n","FIO0SET3",	&FIO0SET3);
	printf("%32s = %x\n","FIO1SET3",	&FIO1SET3);
	printf("%32s = %x\n","FIO2SET3",	&FIO2SET3);
	printf("%32s = %x\n","FIO3SET3",	&FIO3SET3);
	printf("%32s = %x\n","FIO4SET3",	&FIO4SET3);
	printf("%32s = %x\n","FIO0SETL",	&FIO0SETL);
	printf("%32s = %x\n","FIO1SETL",	&FIO1SETL);
	printf("%32s = %x\n","FIO2SETL",	&FIO2SETL);
	printf("%32s = %x\n","FIO3SETL",	&FIO3SETL);
	printf("%32s = %x\n","FIO4SETL",	&FIO4SETL);
	printf("%32s = %x\n","FIO0SETU",	&FIO0SETU);
	printf("%32s = %x\n","FIO1SETU",	&FIO1SETU);
	printf("%32s = %x\n","FIO2SETU",	&FIO2SETU);
	printf("%32s = %x\n","FIO3SETU",	&FIO3SETU);
	printf("%32s = %x\n","FIO4SETU",	&FIO4SETU);
	printf("%32s = %x\n","FIO0CLR0",	&FIO0CLR0);
	printf("%32s = %x\n","FIO1CLR0",	&FIO1CLR0);
	printf("%32s = %x\n","FIO2CLR0",	&FIO2CLR0);
	printf("%32s = %x\n","FIO3CLR0",	&FIO3CLR0);
	printf("%32s = %x\n","FIO4CLR0",	&FIO4CLR0);
	printf("%32s = %x\n","FIO0CLR1",	&FIO0CLR1);
	printf("%32s = %x\n","FIO1CLR1",	&FIO1CLR1);
	printf("%32s = %x\n","FIO2CLR1",	&FIO2CLR1);
	printf("%32s = %x\n","FIO3CLR1",	&FIO3CLR1);
	printf("%32s = %x\n","FIO4CLR1",	&FIO4CLR1);
	printf("%32s = %x\n","FIO0CLR2",	&FIO0CLR2);
	printf("%32s = %x\n","FIO1CLR2",	&FIO1CLR2);
	printf("%32s = %x\n","FIO2CLR2",	&FIO2CLR2);
	printf("%32s = %x\n","FIO3CLR2",	&FIO3CLR2);
	printf("%32s = %x\n","FIO4CLR2",	&FIO4CLR2);
	printf("%32s = %x\n","FIO0CLR3",	&FIO0CLR3);
	printf("%32s = %x\n","FIO1CLR3",	&FIO1CLR3);
	printf("%32s = %x\n","FIO2CLR3",	&FIO2CLR3);
	printf("%32s = %x\n","FIO3CLR3",	&FIO3CLR3);
	printf("%32s = %x\n","FIO4CLR3",	&FIO4CLR3);
	printf("%32s = %x\n","FIO0CLRL",	&FIO0CLRL);
	printf("%32s = %x\n","FIO1CLRL",	&FIO1CLRL);
	printf("%32s = %x\n","FIO2CLRL",	&FIO2CLRL);
	printf("%32s = %x\n","FIO3CLRL",	&FIO3CLRL);
	printf("%32s = %x\n","FIO4CLRL",	&FIO4CLRL);
	printf("%32s = %x\n","FIO0CLRU",	&FIO0CLRU);
	printf("%32s = %x\n","FIO1CLRU",	&FIO1CLRU);
	printf("%32s = %x\n","FIO2CLRU",	&FIO2CLRU);
	printf("%32s = %x\n","FIO3CLRU",	&FIO3CLRU);
	printf("%32s = %x\n","FIO4CLRU",	&FIO4CLRU);
	printf("%32s = %x\n","MAMCR",	&MAMCR);
	printf("%32s = %x\n","MAMTIM",	&MAMTIM);
	printf("%32s = %x\n","MEMMAP",	&MEMMAP);
	printf("%32s = %x\n","PLLCON",	&PLLCON);
	printf("%32s = %x\n","PLLCFG",	&PLLCFG);
	printf("%32s = %x\n","PLLSTAT",	&PLLSTAT);
	printf("%32s = %x\n","PLLFEED",	&PLLFEED);
	printf("%32s = %x\n","PCON",	&PCON);
	printf("%32s = %x\n","PCONP",	&PCONP);
	printf("%32s = %x\n","CCLKCFG",	&CCLKCFG);
	printf("%32s = %x\n","USBCLKCFG",	&USBCLKCFG);
	printf("%32s = %x\n","CLKSRCSEL",	&CLKSRCSEL);
	printf("%32s = %x\n","PCLKSEL0",	&PCLKSEL0);
	printf("%32s = %x\n","PCLKSEL1",	&PCLKSEL1);
	printf("%32s = %x\n","EXTINT",	&EXTINT);
	printf("%32s = %x\n","INTWAKE",	&INTWAKE);
	printf("%32s = %x\n","EXTMODE",	&EXTMODE);
	printf("%32s = %x\n","EXTPOLAR",	&EXTPOLAR);
	printf("%32s = %x\n","RSIR",	&RSIR);
	printf("%32s = %x\n","CSPR",	&CSPR);
	printf("%32s = %x\n","AHBCFG1",	&AHBCFG1);
	printf("%32s = %x\n","AHBCFG2",	&AHBCFG2);
	printf("%32s = %x\n","SCS",	&SCS);
	printf("%32s = %x\n","EMC_CTRL",	&EMC_CTRL);
	printf("%32s = %x\n","EMC_STAT",	&EMC_STAT);
	printf("%32s = %x\n","EMC_CONFIG",	&EMC_CONFIG);
	printf("%32s = %x\n","EMC_DYN_CTRL",	&EMC_DYN_CTRL);
	printf("%32s = %x\n","EMC_DYN_RFSH",	&EMC_DYN_RFSH);
	printf("%32s = %x\n","EMC_DYN_RD_CFG",	&EMC_DYN_RD_CFG);
	printf("%32s = %x\n","EMC_DYN_RP",	&EMC_DYN_RP);
	printf("%32s = %x\n","EMC_DYN_RAS",	&EMC_DYN_RAS);
	printf("%32s = %x\n","EMC_DYN_SREX",	&EMC_DYN_SREX);
	printf("%32s = %x\n","EMC_DYN_APR",	&EMC_DYN_APR);
	printf("%32s = %x\n","EMC_DYN_DAL",	&EMC_DYN_DAL);
	printf("%32s = %x\n","EMC_DYN_WR",	&EMC_DYN_WR);
	printf("%32s = %x\n","EMC_DYN_RC",	&EMC_DYN_RC);
	printf("%32s = %x\n","EMC_DYN_RFC",	&EMC_DYN_RFC);
	printf("%32s = %x\n","EMC_DYN_XSR",	&EMC_DYN_XSR);
	printf("%32s = %x\n","EMC_DYN_RRD",	&EMC_DYN_RRD);
	printf("%32s = %x\n","EMC_DYN_MRD",	&EMC_DYN_MRD);
	printf("%32s = %x\n","EMC_DYN_CFG0",	&EMC_DYN_CFG0);
	printf("%32s = %x\n","EMC_DYN_RASCAS0",	&EMC_DYN_RASCAS0);
	printf("%32s = %x\n","EMC_DYN_CFG1",	&EMC_DYN_CFG1);
	printf("%32s = %x\n","EMC_DYN_RASCAS1",	&EMC_DYN_RASCAS1);
	printf("%32s = %x\n","EMC_DYN_CFG2",	&EMC_DYN_CFG2);
	printf("%32s = %x\n","EMC_DYN_RASCAS2",	&EMC_DYN_RASCAS2);
	printf("%32s = %x\n","EMC_DYN_CFG3",	&EMC_DYN_CFG3);
	printf("%32s = %x\n","EMC_DYN_RASCAS3",	&EMC_DYN_RASCAS3);
	printf("%32s = %x\n","EMC_STA_CFG0",	&EMC_STA_CFG0);
	printf("%32s = %x\n","EMC_STA_WAITWEN0",	&EMC_STA_WAITWEN0);
	printf("%32s = %x\n","EMC_STA_WAITOEN0",	&EMC_STA_WAITOEN0);
	printf("%32s = %x\n","EMC_STA_WAITRD0",	&EMC_STA_WAITRD0);
	printf("%32s = %x\n","EMC_STA_WAITPAGE0",	&EMC_STA_WAITPAGE0);
	printf("%32s = %x\n","EMC_STA_WAITWR0",	&EMC_STA_WAITWR0);
	printf("%32s = %x\n","EMC_STA_WAITTURN0",	&EMC_STA_WAITTURN0);
	printf("%32s = %x\n","EMC_STA_CFG1",	&EMC_STA_CFG1);
	printf("%32s = %x\n","EMC_STA_WAITWEN1",	&EMC_STA_WAITWEN1);
	printf("%32s = %x\n","EMC_STA_WAITOEN1",	&EMC_STA_WAITOEN1);
	printf("%32s = %x\n","EMC_STA_WAITRD1",	&EMC_STA_WAITRD1);
	printf("%32s = %x\n","EMC_STA_WAITPAGE1",	&EMC_STA_WAITPAGE1);
	printf("%32s = %x\n","EMC_STA_WAITWR1",	&EMC_STA_WAITWR1);
	printf("%32s = %x\n","EMC_STA_WAITTURN1",	&EMC_STA_WAITTURN1);
	printf("%32s = %x\n","EMC_STA_CFG2",	&EMC_STA_CFG2);
	printf("%32s = %x\n","EMC_STA_WAITWEN2",	&EMC_STA_WAITWEN2);
	printf("%32s = %x\n","EMC_STA_WAITOEN2",	&EMC_STA_WAITOEN2);
	printf("%32s = %x\n","EMC_STA_WAITRD2",	&EMC_STA_WAITRD2);
	printf("%32s = %x\n","EMC_STA_WAITPAGE2",	&EMC_STA_WAITPAGE2);
	printf("%32s = %x\n","EMC_STA_WAITWR2",	&EMC_STA_WAITWR2);
	printf("%32s = %x\n","EMC_STA_WAITTURN2",	&EMC_STA_WAITTURN2);
	printf("%32s = %x\n","EMC_STA_CFG3",	&EMC_STA_CFG3);
	printf("%32s = %x\n","EMC_STA_WAITWEN3",	&EMC_STA_WAITWEN3);
	printf("%32s = %x\n","EMC_STA_WAITOEN3",	&EMC_STA_WAITOEN3);
	printf("%32s = %x\n","EMC_STA_WAITRD3",	&EMC_STA_WAITRD3);
	printf("%32s = %x\n","EMC_STA_WAITPAGE3",	&EMC_STA_WAITPAGE3);
	printf("%32s = %x\n","EMC_STA_WAITWR3",	&EMC_STA_WAITWR3);
	printf("%32s = %x\n","EMC_STA_WAITTURN3",	&EMC_STA_WAITTURN3);
	printf("%32s = %x\n","EMC_STA_EXT_WAIT",	&EMC_STA_EXT_WAIT);
	printf("%32s = %x\n","T0IR",	&T0IR);
	printf("%32s = %x\n","T0TCR",	&T0TCR);
	printf("%32s = %x\n","T0TC",	&T0TC);
	printf("%32s = %x\n","T0PR",	&T0PR);
	printf("%32s = %x\n","T0PC",	&T0PC);
	printf("%32s = %x\n","T0MCR",	&T0MCR);
	printf("%32s = %x\n","T0MR0",	&T0MR0);
	printf("%32s = %x\n","T0MR1",	&T0MR1);
	printf("%32s = %x\n","T0MR2",	&T0MR2);
	printf("%32s = %x\n","T0MR3",	&T0MR3);
	printf("%32s = %x\n","T0CCR",	&T0CCR);
	printf("%32s = %x\n","T0CR0",	&T0CR0);
	printf("%32s = %x\n","T0CR1",	&T0CR1);
	printf("%32s = %x\n","T0CR2",	&T0CR2);
	printf("%32s = %x\n","T0CR3",	&T0CR3);
	printf("%32s = %x\n","T0EMR",	&T0EMR);
	printf("%32s = %x\n","T0CTCR",	&T0CTCR);
	printf("%32s = %x\n","T1IR",	&T1IR);
	printf("%32s = %x\n","T1TCR",	&T1TCR);
	printf("%32s = %x\n","T1TC",	&T1TC);
	printf("%32s = %x\n","T1PR",	&T1PR);
	printf("%32s = %x\n","T1PC",	&T1PC);
	printf("%32s = %x\n","T1MCR",	&T1MCR);
	printf("%32s = %x\n","T1MR0",	&T1MR0);
	printf("%32s = %x\n","T1MR1",	&T1MR1);
	printf("%32s = %x\n","T1MR2",	&T1MR2);
	printf("%32s = %x\n","T1MR3",	&T1MR3);
	printf("%32s = %x\n","T1CCR",	&T1CCR);
	printf("%32s = %x\n","T1CR0",	&T1CR0);
	printf("%32s = %x\n","T1CR1",	&T1CR1);
	printf("%32s = %x\n","T1CR2",	&T1CR2);
	printf("%32s = %x\n","T1CR3",	&T1CR3);
	printf("%32s = %x\n","T1EMR",	&T1EMR);
	printf("%32s = %x\n","T1CTCR",	&T1CTCR);
	printf("%32s = %x\n","T2IR",	&T2IR);
	printf("%32s = %x\n","T2TCR",	&T2TCR);
	printf("%32s = %x\n","T2TC",	&T2TC);
	printf("%32s = %x\n","T2PR",	&T2PR);
	printf("%32s = %x\n","T2PC",	&T2PC);
	printf("%32s = %x\n","T2MCR",	&T2MCR);
	printf("%32s = %x\n","T2MR0",	&T2MR0);
	printf("%32s = %x\n","T2MR1",	&T2MR1);
	printf("%32s = %x\n","T2MR2",	&T2MR2);
	printf("%32s = %x\n","T2MR3",	&T2MR3);
	printf("%32s = %x\n","T2CCR",	&T2CCR);
	printf("%32s = %x\n","T2CR0",	&T2CR0);
	printf("%32s = %x\n","T2CR1",	&T2CR1);
	printf("%32s = %x\n","T2CR2",	&T2CR2);
	printf("%32s = %x\n","T2CR3",	&T2CR3);
	printf("%32s = %x\n","T2EMR",	&T2EMR);
	printf("%32s = %x\n","T2CTCR",	&T2CTCR);
	printf("%32s = %x\n","T3IR",	&T3IR);
	printf("%32s = %x\n","T3TCR",	&T3TCR);
	printf("%32s = %x\n","T3TC",	&T3TC);
	printf("%32s = %x\n","T3PR",	&T3PR);
	printf("%32s = %x\n","T3PC",	&T3PC);
	printf("%32s = %x\n","T3MCR",	&T3MCR);
	printf("%32s = %x\n","T3MR0",	&T3MR0);
	printf("%32s = %x\n","T3MR1",	&T3MR1);
	printf("%32s = %x\n","T3MR2",	&T3MR2);
	printf("%32s = %x\n","T3MR3",	&T3MR3);
	printf("%32s = %x\n","T3CCR",	&T3CCR);
	printf("%32s = %x\n","T3CR0",	&T3CR0);
	printf("%32s = %x\n","T3CR1",	&T3CR1);
	printf("%32s = %x\n","T3CR2",	&T3CR2);
	printf("%32s = %x\n","T3CR3",	&T3CR3);
	printf("%32s = %x\n","T3EMR",	&T3EMR);
	printf("%32s = %x\n","T3CTCR",	&T3CTCR);
	printf("%32s = %x\n","PWM0IR",	&PWM0IR);
	printf("%32s = %x\n","PWM0TCR",	&PWM0TCR);
	printf("%32s = %x\n","PWM0TC",	&PWM0TC);
	printf("%32s = %x\n","PWM0PR",	&PWM0PR);
	printf("%32s = %x\n","PWM0PC",	&PWM0PC);
	printf("%32s = %x\n","PWM0MCR",	&PWM0MCR);
	printf("%32s = %x\n","PWM0MR0",	&PWM0MR0);
	printf("%32s = %x\n","PWM0MR1",	&PWM0MR1);
	printf("%32s = %x\n","PWM0MR2",	&PWM0MR2);
	printf("%32s = %x\n","PWM0MR3",	&PWM0MR3);
	printf("%32s = %x\n","PWM0CCR",	&PWM0CCR);
	printf("%32s = %x\n","PWM0CR0",	&PWM0CR0);
	printf("%32s = %x\n","PWM0CR1",	&PWM0CR1);
	printf("%32s = %x\n","PWM0CR2",	&PWM0CR2);
	printf("%32s = %x\n","PWM0CR3",	&PWM0CR3);
	printf("%32s = %x\n","PWM0EMR",	&PWM0EMR);
	printf("%32s = %x\n","PWM0MR4",	&PWM0MR4);
	printf("%32s = %x\n","PWM0MR5",	&PWM0MR5);
	printf("%32s = %x\n","PWM0MR6",	&PWM0MR6);
	printf("%32s = %x\n","PWM0PCR",	&PWM0PCR);
	printf("%32s = %x\n","PWM0LER",	&PWM0LER);
	printf("%32s = %x\n","PWM0CTCR",	&PWM0CTCR);
	printf("%32s = %x\n","PWM1IR",	&PWM1IR);
	printf("%32s = %x\n","PWM1TCR",	&PWM1TCR);
	printf("%32s = %x\n","PWM1TC",	&PWM1TC);
	printf("%32s = %x\n","PWM1PR",	&PWM1PR);
	printf("%32s = %x\n","PWM1PC",	&PWM1PC);
	printf("%32s = %x\n","PWM1MCR",	&PWM1MCR);
	printf("%32s = %x\n","PWM1MR0",	&PWM1MR0);
	printf("%32s = %x\n","PWM1MR1",	&PWM1MR1);
	printf("%32s = %x\n","PWM1MR2",	&PWM1MR2);
	printf("%32s = %x\n","PWM1MR3",	&PWM1MR3);
	printf("%32s = %x\n","PWM1CCR",	&PWM1CCR);
	printf("%32s = %x\n","PWM1CR0",	&PWM1CR0);
	printf("%32s = %x\n","PWM1CR1",	&PWM1CR1);
	printf("%32s = %x\n","PWM1CR2",	&PWM1CR2);
	printf("%32s = %x\n","PWM1CR3",	&PWM1CR3);
	printf("%32s = %x\n","PWM1EMR",	&PWM1EMR);
	printf("%32s = %x\n","PWM1MR4",	&PWM1MR4);
	printf("%32s = %x\n","PWM1MR5",	&PWM1MR5);
	printf("%32s = %x\n","PWM1MR6",	&PWM1MR6);
	printf("%32s = %x\n","PWM1PCR",	&PWM1PCR);
	printf("%32s = %x\n","PWM1LER",	&PWM1LER);
	printf("%32s = %x\n","PWM1CTCR",	&PWM1CTCR);
	printf("%32s = %x\n","U0RBR",	&U0RBR);
	printf("%32s = %x\n","U0THR",	&U0THR);
	printf("%32s = %x\n","U0DLL",	&U0DLL);
	printf("%32s = %x\n","U0DLM",	&U0DLM);
	printf("%32s = %x\n","U0IER",	&U0IER);
	printf("%32s = %x\n","U0IIR",	&U0IIR);
	printf("%32s = %x\n","U0FCR",	&U0FCR);
	printf("%32s = %x\n","U0LCR",	&U0LCR);
	printf("%32s = %x\n","U0LSR",	&U0LSR);
	printf("%32s = %x\n","U0SCR",	&U0SCR);
	printf("%32s = %x\n","U0ACR",	&U0ACR);
	printf("%32s = %x\n","U0ICR",	&U0ICR);
	printf("%32s = %x\n","U0FDR",	&U0FDR);
	printf("%32s = %x\n","U0TER",	&U0TER);
	printf("%32s = %x\n","U1RBR",	&U1RBR);
	printf("%32s = %x\n","U1THR",	&U1THR);
	printf("%32s = %x\n","U1DLL",	&U1DLL);
	printf("%32s = %x\n","U1DLM",	&U1DLM);
	printf("%32s = %x\n","U1IER",	&U1IER);
	printf("%32s = %x\n","U1IIR",	&U1IIR);
	printf("%32s = %x\n","U1FCR",	&U1FCR);
	printf("%32s = %x\n","U1LCR",	&U1LCR);
	printf("%32s = %x\n","U1MCR",	&U1MCR);
	printf("%32s = %x\n","U1LSR",	&U1LSR);
	printf("%32s = %x\n","U1MSR",	&U1MSR);
	printf("%32s = %x\n","U1SCR",	&U1SCR);
	printf("%32s = %x\n","U1ACR",	&U1ACR);
	printf("%32s = %x\n","U1FDR",	&U1FDR);
	printf("%32s = %x\n","U1TER",	&U1TER);
	printf("%32s = %x\n","U2RBR",	&U2RBR);
	printf("%32s = %x\n","U2THR",	&U2THR);
	printf("%32s = %x\n","U2DLL",	&U2DLL);
	printf("%32s = %x\n","U2DLM",	&U2DLM);
	printf("%32s = %x\n","U2IER",	&U2IER);
	printf("%32s = %x\n","U2IIR",	&U2IIR);
	printf("%32s = %x\n","U2FCR",	&U2FCR);
	printf("%32s = %x\n","U2LCR",	&U2LCR);
	printf("%32s = %x\n","U2LSR",	&U2LSR);
	printf("%32s = %x\n","U2SCR",	&U2SCR);
	printf("%32s = %x\n","U2ACR",	&U2ACR);
	printf("%32s = %x\n","U2ICR",	&U2ICR);
	printf("%32s = %x\n","U2FDR",	&U2FDR);
	printf("%32s = %x\n","U2TER",	&U2TER);
	printf("%32s = %x\n","U3RBR",	&U3RBR);
	printf("%32s = %x\n","U3THR",	&U3THR);
	printf("%32s = %x\n","U3DLL",	&U3DLL);
	printf("%32s = %x\n","U3DLM",	&U3DLM);
	printf("%32s = %x\n","U3IER",	&U3IER);
	printf("%32s = %x\n","U3IIR",	&U3IIR);
	printf("%32s = %x\n","U3FCR",	&U3FCR);
	printf("%32s = %x\n","U3LCR",	&U3LCR);
	printf("%32s = %x\n","U3LSR",	&U3LSR);
	printf("%32s = %x\n","U3SCR",	&U3SCR);
	printf("%32s = %x\n","U3ACR",	&U3ACR);
	printf("%32s = %x\n","U3ICR",	&U3ICR);
	printf("%32s = %x\n","U3FDR",	&U3FDR);
	printf("%32s = %x\n","U3TER",	&U3TER);
	printf("%32s = %x\n","I20CONSET",	&I20CONSET);
	printf("%32s = %x\n","I20STAT",	&I20STAT);
	printf("%32s = %x\n","I20DAT",	&I20DAT);
	printf("%32s = %x\n","I20ADR",	&I20ADR);
	printf("%32s = %x\n","I20SCLH",	&I20SCLH);
	printf("%32s = %x\n","I20SCLL",	&I20SCLL);
	printf("%32s = %x\n","I20CONCLR",	&I20CONCLR);
	printf("%32s = %x\n","I21CONSET",	&I21CONSET);
	printf("%32s = %x\n","I21STAT",	&I21STAT);
	printf("%32s = %x\n","I21DAT",	&I21DAT);
	printf("%32s = %x\n","I21ADR",	&I21ADR);
	printf("%32s = %x\n","I21SCLH",	&I21SCLH);
	printf("%32s = %x\n","I21SCLL",	&I21SCLL);
	printf("%32s = %x\n","I21CONCLR",	&I21CONCLR);
	printf("%32s = %x\n","I22CONSET",	&I22CONSET);
	printf("%32s = %x\n","I22STAT",	&I22STAT);
	printf("%32s = %x\n","I22DAT",	&I22DAT);
	printf("%32s = %x\n","I22ADR",	&I22ADR);
	printf("%32s = %x\n","I22SCLH",	&I22SCLH);
	printf("%32s = %x\n","I22SCLL",	&I22SCLL);
	printf("%32s = %x\n","I22CONCLR",	&I22CONCLR);
	printf("%32s = %x\n","S0SPCR",	&S0SPCR);
	printf("%32s = %x\n","S0SPSR",	&S0SPSR);
	printf("%32s = %x\n","S0SPDR",	&S0SPDR);
	printf("%32s = %x\n","S0SPCCR",	&S0SPCCR);
	printf("%32s = %x\n","S0SPINT",	&S0SPINT);
	printf("%32s = %x\n","SSP0CR0",	&SSP0CR0);
	printf("%32s = %x\n","SSP0CR1",	&SSP0CR1);
	printf("%32s = %x\n","SSP0DR",	&SSP0DR);
	printf("%32s = %x\n","SSP0SR",	&SSP0SR);
	printf("%32s = %x\n","SSP0CPSR",	&SSP0CPSR);
	printf("%32s = %x\n","SSP0IMSC",	&SSP0IMSC);
	printf("%32s = %x\n","SSP0RIS",	&SSP0RIS);
	printf("%32s = %x\n","SSP0MIS",	&SSP0MIS);
	printf("%32s = %x\n","SSP0ICR",	&SSP0ICR);
	printf("%32s = %x\n","SSP0DMACR",	&SSP0DMACR);
	printf("%32s = %x\n","SSP1CR0",	&SSP1CR0);
	printf("%32s = %x\n","SSP1CR1",	&SSP1CR1);
	printf("%32s = %x\n","SSP1DR",	&SSP1DR);
	printf("%32s = %x\n","SSP1SR",	&SSP1SR);
	printf("%32s = %x\n","SSP1CPSR",	&SSP1CPSR);
	printf("%32s = %x\n","SSP1IMSC",	&SSP1IMSC);
	printf("%32s = %x\n","SSP1RIS",	&SSP1RIS);
	printf("%32s = %x\n","SSP1MIS",	&SSP1MIS);
	printf("%32s = %x\n","SSP1ICR",	&SSP1ICR);
	printf("%32s = %x\n","SSP1DMACR",	&SSP1DMACR);
	printf("%32s = %x\n","RTC_ILR",	&RTC_ILR);
	printf("%32s = %x\n","RTC_CTC",	&RTC_CTC);
	printf("%32s = %x\n","RTC_CCR",	&RTC_CCR);
	printf("%32s = %x\n","RTC_CIIR",	&RTC_CIIR);
	printf("%32s = %x\n","RTC_AMR",	&RTC_AMR);
	printf("%32s = %x\n","RTC_CTIME0",	&RTC_CTIME0);
	printf("%32s = %x\n","RTC_CTIME1",	&RTC_CTIME1);
	printf("%32s = %x\n","RTC_CTIME2",	&RTC_CTIME2);
	printf("%32s = %x\n","RTC_SEC",	&RTC_SEC);
	printf("%32s = %x\n","RTC_MIN",	&RTC_MIN);
	printf("%32s = %x\n","RTC_HOUR",	&RTC_HOUR);
	printf("%32s = %x\n","RTC_DOM",	&RTC_DOM);
	printf("%32s = %x\n","RTC_DOW",	&RTC_DOW);
	printf("%32s = %x\n","RTC_DOY",	&RTC_DOY);
	printf("%32s = %x\n","RTC_MONTH",	&RTC_MONTH);
	printf("%32s = %x\n","RTC_YEAR",	&RTC_YEAR);
	printf("%32s = %x\n","RTC_CISS",	&RTC_CISS);
	printf("%32s = %x\n","RTC_ALSEC",	&RTC_ALSEC);
	printf("%32s = %x\n","RTC_ALMIN",	&RTC_ALMIN);
	printf("%32s = %x\n","RTC_ALHOUR",	&RTC_ALHOUR);
	printf("%32s = %x\n","RTC_ALDOM",	&RTC_ALDOM);
	printf("%32s = %x\n","RTC_ALDOW",	&RTC_ALDOW);
	printf("%32s = %x\n","RTC_ALDOY",	&RTC_ALDOY);
	printf("%32s = %x\n","RTC_ALMON",	&RTC_ALMON);
	printf("%32s = %x\n","RTC_ALYEAR",	&RTC_ALYEAR);
	printf("%32s = %x\n","RTC_PREINT",	&RTC_PREINT);
	printf("%32s = %x\n","RTC_PREFRAC",	&RTC_PREFRAC);
	printf("%32s = %x\n","AD0CR",	&AD0CR);
	printf("%32s = %x\n","AD0GDR",	&AD0GDR);
	printf("%32s = %x\n","AD0INTEN",	&AD0INTEN);
	printf("%32s = %x\n","AD0DR0",	&AD0DR0);
	printf("%32s = %x\n","AD0DR1",	&AD0DR1);
	printf("%32s = %x\n","AD0DR2",	&AD0DR2);
	printf("%32s = %x\n","AD0DR3",	&AD0DR3);
	printf("%32s = %x\n","AD0DR4",	&AD0DR4);
	printf("%32s = %x\n","AD0DR5",	&AD0DR5);
	printf("%32s = %x\n","AD0DR6",	&AD0DR6);
	printf("%32s = %x\n","AD0DR7",	&AD0DR7);
	printf("%32s = %x\n","AD0STAT",	&AD0STAT);
	printf("%32s = %x\n","DACR",	&DACR);
	printf("%32s = %x\n","WDMOD",	&WDMOD);
	printf("%32s = %x\n","WDTC",	&WDTC);
	printf("%32s = %x\n","WDFEED",	&WDFEED);
	printf("%32s = %x\n","WDTV",	&WDTV);
	printf("%32s = %x\n","WDCLKSEL",	&WDCLKSEL);
	printf("%32s = %x\n","CAN_AFMR",	&CAN_AFMR);
	printf("%32s = %x\n","CAN_SFF_SA",	&CAN_SFF_SA);
	printf("%32s = %x\n","CAN_SFF_GRP_SA",	&CAN_SFF_GRP_SA);
	printf("%32s = %x\n","CAN_EFF_SA",	&CAN_EFF_SA);
	printf("%32s = %x\n","CAN_EFF_GRP_SA",	&CAN_EFF_GRP_SA);
	printf("%32s = %x\n","CAN_EOT",	&CAN_EOT);
	printf("%32s = %x\n","CAN_LUT_ERR_ADR",	&CAN_LUT_ERR_ADR);
	printf("%32s = %x\n","CAN_LUT_ERR",	&CAN_LUT_ERR);
	printf("%32s = %x\n","CAN_TX_SR",	&CAN_TX_SR);
	printf("%32s = %x\n","CAN_RX_SR",	&CAN_RX_SR);
	printf("%32s = %x\n","CAN_MSR",	&CAN_MSR);
	printf("%32s = %x\n","CAN1MOD",	&CAN1MOD);
	printf("%32s = %x\n","CAN1CMR",	&CAN1CMR);
	printf("%32s = %x\n","CAN1GSR",	&CAN1GSR);
	printf("%32s = %x\n","CAN1ICR",	&CAN1ICR);
	printf("%32s = %x\n","CAN1IER",	&CAN1IER);
	printf("%32s = %x\n","CAN1BTR",	&CAN1BTR);
	printf("%32s = %x\n","CAN1EWL",	&CAN1EWL);
	printf("%32s = %x\n","CAN1SR",	&CAN1SR);
	printf("%32s = %x\n","CAN1RFS",	&CAN1RFS);
	printf("%32s = %x\n","CAN1RID",	&CAN1RID);
	printf("%32s = %x\n","CAN1RDA",	&CAN1RDA);
	printf("%32s = %x\n","CAN1RDB",	&CAN1RDB);
	printf("%32s = %x\n","CAN1TFI1",	&CAN1TFI1);
	printf("%32s = %x\n","CAN1TID1",	&CAN1TID1);
	printf("%32s = %x\n","CAN1TDA1",	&CAN1TDA1);
	printf("%32s = %x\n","CAN1TDB1",	&CAN1TDB1);
	printf("%32s = %x\n","CAN1TFI2",	&CAN1TFI2);
	printf("%32s = %x\n","CAN1TID2",	&CAN1TID2);
	printf("%32s = %x\n","CAN1TDA2",	&CAN1TDA2);
	printf("%32s = %x\n","CAN1TDB2",	&CAN1TDB2);
	printf("%32s = %x\n","CAN1TFI3",	&CAN1TFI3);
	printf("%32s = %x\n","CAN1TID3",	&CAN1TID3);
	printf("%32s = %x\n","CAN1TDA3",	&CAN1TDA3);
	printf("%32s = %x\n","CAN1TDB3",	&CAN1TDB3);
	printf("%32s = %x\n","CAN2MOD",	&CAN2MOD);
	printf("%32s = %x\n","CAN2CMR",	&CAN2CMR);
	printf("%32s = %x\n","CAN2GSR",	&CAN2GSR);
	printf("%32s = %x\n","CAN2ICR",	&CAN2ICR);
	printf("%32s = %x\n","CAN2IER",	&CAN2IER);
	printf("%32s = %x\n","CAN2BTR",	&CAN2BTR);
	printf("%32s = %x\n","CAN2EWL",	&CAN2EWL);
	printf("%32s = %x\n","CAN2SR",	&CAN2SR);
	printf("%32s = %x\n","CAN2RFS",	&CAN2RFS);
	printf("%32s = %x\n","CAN2RID",	&CAN2RID);
	printf("%32s = %x\n","CAN2RDA",	&CAN2RDA);
	printf("%32s = %x\n","CAN2RDB",	&CAN2RDB);
	printf("%32s = %x\n","CAN2TFI1",	&CAN2TFI1);
	printf("%32s = %x\n","CAN2TID1",	&CAN2TID1);
	printf("%32s = %x\n","CAN2TDA1",	&CAN2TDA1);
	printf("%32s = %x\n","CAN2TDB1",	&CAN2TDB1);
	printf("%32s = %x\n","CAN2TFI2",	&CAN2TFI2);
	printf("%32s = %x\n","CAN2TID2",	&CAN2TID2);
	printf("%32s = %x\n","CAN2TDA2",	&CAN2TDA2);
	printf("%32s = %x\n","CAN2TDB2",	&CAN2TDB2);
	printf("%32s = %x\n","CAN2TFI3",	&CAN2TFI3);
	printf("%32s = %x\n","CAN2TID3",	&CAN2TID3);
	printf("%32s = %x\n","CAN2TDA3",	&CAN2TDA3);
	printf("%32s = %x\n","CAN2TDB3",	&CAN2TDB3);
	printf("%32s = %x\n","MCI_POWER",	&MCI_POWER);
	printf("%32s = %x\n","MCI_CLOCK",	&MCI_CLOCK);
	printf("%32s = %x\n","MCI_ARGUMENT",	&MCI_ARGUMENT);
	printf("%32s = %x\n","MCI_COMMAND",	&MCI_COMMAND);
	printf("%32s = %x\n","MCI_RESP_CMD",	&MCI_RESP_CMD);
	printf("%32s = %x\n","MCI_RESP0",	&MCI_RESP0);
	printf("%32s = %x\n","MCI_RESP1",	&MCI_RESP1);
	printf("%32s = %x\n","MCI_RESP2",	&MCI_RESP2);
	printf("%32s = %x\n","MCI_RESP3",	&MCI_RESP3);
	printf("%32s = %x\n","MCI_DATA_TMR",	&MCI_DATA_TMR);
	printf("%32s = %x\n","MCI_DATA_LEN",	&MCI_DATA_LEN);
	printf("%32s = %x\n","MCI_DATA_CTRL",	&MCI_DATA_CTRL);
	printf("%32s = %x\n","MCI_DATA_CNT",	&MCI_DATA_CNT);
	printf("%32s = %x\n","MCI_STATUS",	&MCI_STATUS);
	printf("%32s = %x\n","MCI_CLEAR",	&MCI_CLEAR);
	printf("%32s = %x\n","MCI_MASK0",	&MCI_MASK0);
	printf("%32s = %x\n","MCI_MASK1",	&MCI_MASK1);
	printf("%32s = %x\n","MCI_FIFO_CNT",	&MCI_FIFO_CNT);
	printf("%32s = %x\n","MCI_FIFO",	&MCI_FIFO);
	printf("%32s = %x\n","I2S_DAO",	&I2S_DAO);
	printf("%32s = %x\n","I2S_DAI",	&I2S_DAI);
	printf("%32s = %x\n","I2S_TX_FIFO",	&I2S_TX_FIFO);
	printf("%32s = %x\n","I2S_RX_FIFO",	&I2S_RX_FIFO);
	printf("%32s = %x\n","I2S_STATE",	&I2S_STATE);
	printf("%32s = %x\n","I2S_DMA1",	&I2S_DMA1);
	printf("%32s = %x\n","I2S_DMA2",	&I2S_DMA2);
	printf("%32s = %x\n","I2S_IRQ",	&I2S_IRQ);
	printf("%32s = %x\n","I2S_TXRATE",	&I2S_TXRATE);
	printf("%32s = %x\n","I2S_RXRATE",	&I2S_RXRATE);
	printf("%32s = %x\n","GPDMA_INT_STAT",	&GPDMA_INT_STAT);
	printf("%32s = %x\n","GPDMA_INT_TCSTAT",	&GPDMA_INT_TCSTAT);
	printf("%32s = %x\n","GPDMA_INT_TCCLR",	&GPDMA_INT_TCCLR);
	printf("%32s = %x\n","GPDMA_INT_ERR_STAT",	&GPDMA_INT_ERR_STAT);
	printf("%32s = %x\n","GPDMA_INT_ERR_CLR",	&GPDMA_INT_ERR_CLR);
	printf("%32s = %x\n","GPDMA_RAW_INT_TCSTAT",	&GPDMA_RAW_INT_TCSTAT);
	printf("%32s = %x\n","GPDMA_RAW_INT_ERR_STAT",	&GPDMA_RAW_INT_ERR_STAT);
	printf("%32s = %x\n","GPDMA_ENABLED_CHNS",	&GPDMA_ENABLED_CHNS);
	printf("%32s = %x\n","GPDMA_SOFT_BREQ",	&GPDMA_SOFT_BREQ);
	printf("%32s = %x\n","GPDMA_SOFT_SREQ",	&GPDMA_SOFT_SREQ);
	printf("%32s = %x\n","GPDMA_SOFT_LBREQ",	&GPDMA_SOFT_LBREQ);
	printf("%32s = %x\n","GPDMA_SOFT_LSREQ",	&GPDMA_SOFT_LSREQ);
	printf("%32s = %x\n","GPDMA_CONFIG",	&GPDMA_CONFIG);
	printf("%32s = %x\n","GPDMA_SYNC",	&GPDMA_SYNC);
	printf("%32s = %x\n","GPDMA_CH0_SRC",	&GPDMA_CH0_SRC);
	printf("%32s = %x\n","GPDMA_CH0_DEST",	&GPDMA_CH0_DEST);
	printf("%32s = %x\n","GPDMA_CH0_LLI",	&GPDMA_CH0_LLI);
	printf("%32s = %x\n","GPDMA_CH0_CTRL",	&GPDMA_CH0_CTRL);
	printf("%32s = %x\n","GPDMA_CH0_CFG",	&GPDMA_CH0_CFG);
	printf("%32s = %x\n","GPDMA_CH1_SRC",	&GPDMA_CH1_SRC);
	printf("%32s = %x\n","GPDMA_CH1_DEST",	&GPDMA_CH1_DEST);
	printf("%32s = %x\n","GPDMA_CH1_LLI",	&GPDMA_CH1_LLI);
	printf("%32s = %x\n","GPDMA_CH1_CTRL",	&GPDMA_CH1_CTRL);
	printf("%32s = %x\n","GPDMA_CH1_CFG",	&GPDMA_CH1_CFG);
	printf("%32s = %x\n","USB_INT_STAT",	&USB_INT_STAT);
	printf("%32s = %x\n","DEV_INT_STAT",	&DEV_INT_STAT);
	printf("%32s = %x\n","DEV_INT_EN",	&DEV_INT_EN);
	printf("%32s = %x\n","DEV_INT_CLR",	&DEV_INT_CLR);
	printf("%32s = %x\n","DEV_INT_SET",	&DEV_INT_SET);
	printf("%32s = %x\n","DEV_INT_PRIO",	&DEV_INT_PRIO);
	printf("%32s = %x\n","EP_INT_STAT",	&EP_INT_STAT);
	printf("%32s = %x\n","EP_INT_EN",	&EP_INT_EN);
	printf("%32s = %x\n","EP_INT_CLR",	&EP_INT_CLR);
	printf("%32s = %x\n","EP_INT_SET",	&EP_INT_SET);
	printf("%32s = %x\n","EP_INT_PRIO",	&EP_INT_PRIO);
	printf("%32s = %x\n","REALIZE_EP",	&REALIZE_EP);
	printf("%32s = %x\n","EP_INDEX",	&EP_INDEX);
	printf("%32s = %x\n","MAXPACKET_SIZE",	&MAXPACKET_SIZE);
	printf("%32s = %x\n","CMD_CODE",	&CMD_CODE);
	printf("%32s = %x\n","CMD_DATA",	&CMD_DATA);
	printf("%32s = %x\n","RX_DATA",	&RX_DATA);
	printf("%32s = %x\n","TX_DATA",	&TX_DATA);
	printf("%32s = %x\n","RX_PLENGTH",	&RX_PLENGTH);
	printf("%32s = %x\n","TX_PLENGTH",	&TX_PLENGTH);
	printf("%32s = %x\n","USB_CTRL",	&USB_CTRL);
	printf("%32s = %x\n","DMA_REQ_STAT",	&DMA_REQ_STAT);
	printf("%32s = %x\n","DMA_REQ_CLR",	&DMA_REQ_CLR);
	printf("%32s = %x\n","DMA_REQ_SET",	&DMA_REQ_SET);
	printf("%32s = %x\n","UDCA_HEAD",	&UDCA_HEAD);
	printf("%32s = %x\n","EP_DMA_STAT",	&EP_DMA_STAT);
	printf("%32s = %x\n","EP_DMA_EN",	&EP_DMA_EN);
	printf("%32s = %x\n","EP_DMA_DIS",	&EP_DMA_DIS);
	printf("%32s = %x\n","DMA_INT_STAT",	&DMA_INT_STAT);
	printf("%32s = %x\n","DMA_INT_EN",	&DMA_INT_EN);
	printf("%32s = %x\n","EOT_INT_STAT",	&EOT_INT_STAT);
	printf("%32s = %x\n","EOT_INT_CLR",	&EOT_INT_CLR);
	printf("%32s = %x\n","EOT_INT_SET",	&EOT_INT_SET);
	printf("%32s = %x\n","NDD_REQ_INT_STAT",	&NDD_REQ_INT_STAT);
	printf("%32s = %x\n","NDD_REQ_INT_CLR",	&NDD_REQ_INT_CLR);
	printf("%32s = %x\n","NDD_REQ_INT_SET",	&NDD_REQ_INT_SET);
	printf("%32s = %x\n","SYS_ERR_INT_STAT",	&SYS_ERR_INT_STAT);
	printf("%32s = %x\n","SYS_ERR_INT_CLR",	&SYS_ERR_INT_CLR);
	printf("%32s = %x\n","SYS_ERR_INT_SET",	&SYS_ERR_INT_SET);
	printf("%32s = %x\n","HC_REVISION",	&HC_REVISION);
	printf("%32s = %x\n","HC_CONTROL",	&HC_CONTROL);
	printf("%32s = %x\n","HC_CMD_STAT",	&HC_CMD_STAT);
	printf("%32s = %x\n","HC_INT_STAT",	&HC_INT_STAT);
	printf("%32s = %x\n","HC_INT_EN",	&HC_INT_EN);
	printf("%32s = %x\n","HC_INT_DIS",	&HC_INT_DIS);
	printf("%32s = %x\n","HC_HCCA",	&HC_HCCA);
	printf("%32s = %x\n","HC_PERIOD_CUR_ED",	&HC_PERIOD_CUR_ED);
	printf("%32s = %x\n","HC_CTRL_HEAD_ED",	&HC_CTRL_HEAD_ED);
	printf("%32s = %x\n","HC_CTRL_CUR_ED",	&HC_CTRL_CUR_ED);
	printf("%32s = %x\n","HC_BULK_HEAD_ED",	&HC_BULK_HEAD_ED);
	printf("%32s = %x\n","HC_BULK_CUR_ED",	&HC_BULK_CUR_ED);
	printf("%32s = %x\n","HC_DONE_HEAD",	&HC_DONE_HEAD);
	printf("%32s = %x\n","HC_FM_INTERVAL",	&HC_FM_INTERVAL);
	printf("%32s = %x\n","HC_FM_REMAINING",	&HC_FM_REMAINING);
	printf("%32s = %x\n","HC_FM_NUMBER",	&HC_FM_NUMBER);
	printf("%32s = %x\n","HC_PERIOD_START",	&HC_PERIOD_START);
	printf("%32s = %x\n","HC_LS_THRHLD",	&HC_LS_THRHLD);
	printf("%32s = %x\n","HC_RH_DESCA",	&HC_RH_DESCA);
	printf("%32s = %x\n","HC_RH_DESCB",	&HC_RH_DESCB);
	printf("%32s = %x\n","HC_RH_STAT",	&HC_RH_STAT);
	printf("%32s = %x\n","HC_RH_PORT_STAT1",	&HC_RH_PORT_STAT1);
	printf("%32s = %x\n","HC_RH_PORT_STAT2",	&HC_RH_PORT_STAT2);
	printf("%32s = %x\n","OTG_INT_STAT",	&OTG_INT_STAT);
	printf("%32s = %x\n","OTG_INT_EN",	&OTG_INT_EN);
	printf("%32s = %x\n","OTG_INT_SET",	&OTG_INT_SET);
	printf("%32s = %x\n","OTG_INT_CLR",	&OTG_INT_CLR);
	printf("%32s = %x\n","OTG_STAT_CTRL",	&OTG_STAT_CTRL);
	printf("%32s = %x\n","OTG_TIMER",	&OTG_TIMER);
	printf("%32s = %x\n","OTG_I2C_RX",	&OTG_I2C_RX);
	printf("%32s = %x\n","OTG_I2C_TX",	&OTG_I2C_TX);
	printf("%32s = %x\n","OTG_I2C_STS",	&OTG_I2C_STS);
	printf("%32s = %x\n","OTG_I2C_CTL",	&OTG_I2C_CTL);
	printf("%32s = %x\n","OTG_I2C_CLKHI",	&OTG_I2C_CLKHI);
	printf("%32s = %x\n","OTG_I2C_CLKLO",	&OTG_I2C_CLKLO);
	printf("%32s = %x\n","OTG_CLK_CTRL",	&OTG_CLK_CTRL);
	printf("%32s = %x\n","OTG_CLK_STAT",	&OTG_CLK_STAT);
	printf("%32s = %x\n","USBPortSel",	&USBPortSel);
	printf("%32s = %x\n","USBClkCtrl",	&USBClkCtrl);
	printf("%32s = %x\n","USBClkSt",	&USBClkSt);
	printf("%32s = %x\n","MAC_MAC1",	&MAC_MAC1);
	printf("%32s = %x\n","MAC_MAC2",	&MAC_MAC2);
	printf("%32s = %x\n","MAC_IPGT",	&MAC_IPGT);
	printf("%32s = %x\n","MAC_IPGR",	&MAC_IPGR);
	printf("%32s = %x\n","MAC_CLRT",	&MAC_CLRT);
	printf("%32s = %x\n","MAC_MAXF",	&MAC_MAXF);
	printf("%32s = %x\n","MAC_SUPP",	&MAC_SUPP);
	printf("%32s = %x\n","MAC_TEST",	&MAC_TEST);
	printf("%32s = %x\n","MAC_MCFG",	&MAC_MCFG);
	printf("%32s = %x\n","MAC_MCMD",	&MAC_MCMD);
	printf("%32s = %x\n","MAC_MADR",	&MAC_MADR);
	printf("%32s = %x\n","MAC_MWTD",	&MAC_MWTD);
	printf("%32s = %x\n","MAC_MRDD",	&MAC_MRDD);
	printf("%32s = %x\n","MAC_MIND",	&MAC_MIND);
	printf("%32s = %x\n","MAC_SA0",	&MAC_SA0);
	printf("%32s = %x\n","MAC_SA1",	&MAC_SA1);
	printf("%32s = %x\n","MAC_SA2",	&MAC_SA2);
	printf("%32s = %x\n","MAC_COMMAND",	&MAC_COMMAND);
	printf("%32s = %x\n","MAC_STATUS",	&MAC_STATUS);
	printf("%32s = %x\n","MAC_RXDESCRIPTOR",	&MAC_RXDESCRIPTOR);
	printf("%32s = %x\n","MAC_RXSTATUS",	&MAC_RXSTATUS);
	printf("%32s = %x\n","MAC_RXDESCRIPTORNUM",	&MAC_RXDESCRIPTORNUM);
	printf("%32s = %x\n","MAC_RXPRODUCEINDEX",	&MAC_RXPRODUCEINDEX);
	printf("%32s = %x\n","MAC_RXCONSUMEINDEX",	&MAC_RXCONSUMEINDEX);
	printf("%32s = %x\n","MAC_TXDESCRIPTOR",	&MAC_TXDESCRIPTOR);
	printf("%32s = %x\n","MAC_TXSTATUS",	&MAC_TXSTATUS);
	printf("%32s = %x\n","MAC_TXDESCRIPTORNUM",	&MAC_TXDESCRIPTORNUM);
	printf("%32s = %x\n","MAC_TXPRODUCEINDEX",	&MAC_TXPRODUCEINDEX);
	printf("%32s = %x\n","MAC_TXCONSUMEINDEX",	&MAC_TXCONSUMEINDEX);
	printf("%32s = %x\n","MAC_TSV0",	&MAC_TSV0);
	printf("%32s = %x\n","MAC_TSV1",	&MAC_TSV1);
	printf("%32s = %x\n","MAC_RSV",	&MAC_RSV);
	printf("%32s = %x\n","MAC_FLOWCONTROLCNT",	&MAC_FLOWCONTROLCNT);
	printf("%32s = %x\n","MAC_FLOWCONTROLSTS",	&MAC_FLOWCONTROLSTS);
	printf("%32s = %x\n","MAC_RXFILTERCTRL",	&MAC_RXFILTERCTRL);
	printf("%32s = %x\n","MAC_RXFILTERWOLSTS",	&MAC_RXFILTERWOLSTS);
	printf("%32s = %x\n","MAC_RXFILTERWOLCLR",	&MAC_RXFILTERWOLCLR);
	printf("%32s = %x\n","MAC_HASHFILTERL",	&MAC_HASHFILTERL);
	printf("%32s = %x\n","MAC_HASHFILTERH",	&MAC_HASHFILTERH);
	printf("%32s = %x\n","MAC_INTSTATUS",	&MAC_INTSTATUS);
	printf("%32s = %x\n","MAC_INTENABLE",	&MAC_INTENABLE);
	printf("%32s = %x\n","MAC_INTCLEAR",	&MAC_INTCLEAR);
	printf("%32s = %x\n","MAC_INTSET",	&MAC_INTSET);
	printf("%32s = %x\n","MAC_POWERDOWN",	&MAC_POWERDOWN);
	printf("%32s = %x\n","MAC_MODULEID",	&MAC_MODULEID);

	return 0;
}
